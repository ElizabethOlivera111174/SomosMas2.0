// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Infrastucture.Data;

#nullable disable

namespace Project.Infrustructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220416061537_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Project.Domain.Entities.Activities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(65535)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Content from activity 1",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9663),
                            Image = "ImageActivities1.jpg",
                            IsDeleted = false,
                            Name = "Activity 1"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Content from activity 2",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9671),
                            Image = "ImageActivities2.jpg",
                            IsDeleted = false,
                            Name = "Activity 2"
                        },
                        new
                        {
                            Id = 3,
                            Content = "Content from activity 3",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9677),
                            Image = "ImageActivities3.jpg",
                            IsDeleted = false,
                            Name = "Activity 3"
                        },
                        new
                        {
                            Id = 4,
                            Content = "Content from activity 4",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9681),
                            Image = "ImageActivities4.jpg",
                            IsDeleted = false,
                            Name = "Activity 4"
                        },
                        new
                        {
                            Id = 5,
                            Content = "Content from activity 5",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9690),
                            Image = "ImageActivities5.jpg",
                            IsDeleted = false,
                            Name = "Activity 5"
                        },
                        new
                        {
                            Id = 6,
                            Content = "Content from activity 6",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9696),
                            Image = "ImageActivities6.jpg",
                            IsDeleted = false,
                            Name = "Activity 6"
                        },
                        new
                        {
                            Id = 7,
                            Content = "Content from activity 7",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9701),
                            Image = "ImageActivities7.jpg",
                            IsDeleted = false,
                            Name = "Activity 7"
                        },
                        new
                        {
                            Id = 8,
                            Content = "Content from activity 8",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9706),
                            Image = "ImageActivities8.jpg",
                            IsDeleted = false,
                            Name = "Activity 8"
                        },
                        new
                        {
                            Id = 9,
                            Content = "Content from activity 9",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9711),
                            Image = "ImageActivities9.jpg",
                            IsDeleted = false,
                            Name = "Activity 9"
                        },
                        new
                        {
                            Id = 10,
                            Content = "Content from activity 10",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9717),
                            Image = "ImageActivities10.jpg",
                            IsDeleted = false,
                            Name = "Activity 10"
                        });
                });

            modelBuilder.Entity("Project.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9752),
                            Description = "Description for Category 1",
                            Image = "ImageCategories1.jpg",
                            IsDeleted = false,
                            Name = "Activity 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9760),
                            Description = "Description for Category 2",
                            Image = "ImageCategories2.jpg",
                            IsDeleted = false,
                            Name = "Activity 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9765),
                            Description = "Description for Category 3",
                            Image = "ImageCategories3.jpg",
                            IsDeleted = false,
                            Name = "Activity 3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9770),
                            Description = "Description for Category 4",
                            Image = "ImageCategories4.jpg",
                            IsDeleted = false,
                            Name = "Activity 4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9774),
                            Description = "Description for Category 5",
                            Image = "ImageCategories5.jpg",
                            IsDeleted = false,
                            Name = "Activity 5"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9837),
                            Description = "Description for Category 6",
                            Image = "ImageCategories6.jpg",
                            IsDeleted = false,
                            Name = "Activity 6"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9843),
                            Description = "Description for Category 7",
                            Image = "ImageCategories7.jpg",
                            IsDeleted = false,
                            Name = "Activity 7"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9848),
                            Description = "Description for Category 8",
                            Image = "ImageCategories8.jpg",
                            IsDeleted = false,
                            Name = "Activity 8"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9853),
                            Description = "Description for Category 9",
                            Image = "ImageCategories9.jpg",
                            IsDeleted = false,
                            Name = "Activity 9"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9876),
                            Description = "Description for Category 10",
                            Image = "ImageCategories10.jpg",
                            IsDeleted = false,
                            Name = "Activity 10"
                        });
                });

            modelBuilder.Entity("Project.Domain.Entities.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NewId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NewId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Body from Comment 1",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9952),
                            IsDeleted = false,
                            NewId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Body = "Body from Comment 2",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9959),
                            IsDeleted = false,
                            NewId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Body = "Body from Comment 3",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9964),
                            IsDeleted = false,
                            NewId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Body = "Body from Comment 4",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9998),
                            IsDeleted = false,
                            NewId = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Body = "Body from Comment 5",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(3),
                            IsDeleted = false,
                            NewId = 5,
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Body = "Body from Comment 6",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(8),
                            IsDeleted = false,
                            NewId = 6,
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            Body = "Body from Comment 7",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(13),
                            IsDeleted = false,
                            NewId = 7,
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            Body = "Body from Comment 8",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(18),
                            IsDeleted = false,
                            NewId = 8,
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            Body = "Body from Comment 9",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(22),
                            IsDeleted = false,
                            NewId = 9,
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            Body = "Body from Comment 10",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(28),
                            IsDeleted = false,
                            NewId = 10,
                            UserId = 10
                        });
                });

            modelBuilder.Entity("Project.Domain.Entities.Contacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("VARCHAR(320)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<int>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(41),
                            Email = "Email for contact 1",
                            IsDeleted = false,
                            Message = "Message from contact 1",
                            Name = "Contact 1",
                            Phone = 382
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(46),
                            Email = "Email for contact 2",
                            IsDeleted = false,
                            Message = "Message from contact 2",
                            Name = "Contact 2",
                            Phone = 383
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(51),
                            Email = "Email for contact 3",
                            IsDeleted = false,
                            Message = "Message from contact 3",
                            Name = "Contact 3",
                            Phone = 384
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(56),
                            Email = "Email for contact 4",
                            IsDeleted = false,
                            Message = "Message from contact 4",
                            Name = "Contact 4",
                            Phone = 385
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(61),
                            Email = "Email for contact 5",
                            IsDeleted = false,
                            Message = "Message from contact 5",
                            Name = "Contact 5",
                            Phone = 386
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(66),
                            Email = "Email for contact 6",
                            IsDeleted = false,
                            Message = "Message from contact 6",
                            Name = "Contact 6",
                            Phone = 387
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(71),
                            Email = "Email for contact 7",
                            IsDeleted = false,
                            Message = "Message from contact 7",
                            Name = "Contact 7",
                            Phone = 388
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(75),
                            Email = "Email for contact 8",
                            IsDeleted = false,
                            Message = "Message from contact 8",
                            Name = "Contact 8",
                            Phone = 389
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(80),
                            Email = "Email for contact 9",
                            IsDeleted = false,
                            Message = "Message from contact 9",
                            Name = "Contact 9",
                            Phone = 390
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(86),
                            Email = "Email for contact 10",
                            IsDeleted = false,
                            Message = "Message from contact 10",
                            Name = "Contact 10",
                            Phone = 391
                        });
                });

            modelBuilder.Entity("Project.Domain.Entities.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("FacebookUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("InstagramUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedinUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(100),
                            Description = "Description for member 1",
                            FacebookUrl = "FacebookURL for member 1",
                            Image = "ImageMembers1.jpg",
                            InstagramUrl = "InstagramURL for member 1",
                            IsDeleted = false,
                            LinkedinUrl = "LinkdInURL for member 1",
                            Name = "Member 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(136),
                            Description = "Description for member 2",
                            FacebookUrl = "FacebookURL for member 2",
                            Image = "ImageMembers2.jpg",
                            InstagramUrl = "InstagramURL for member 2",
                            IsDeleted = false,
                            LinkedinUrl = "LinkdInURL for member 2",
                            Name = "Member 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(144),
                            Description = "Description for member 3",
                            FacebookUrl = "FacebookURL for member 3",
                            Image = "ImageMembers3.jpg",
                            InstagramUrl = "InstagramURL for member 3",
                            IsDeleted = false,
                            LinkedinUrl = "LinkdInURL for member 3",
                            Name = "Member 3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(150),
                            Description = "Description for member 4",
                            FacebookUrl = "FacebookURL for member 4",
                            Image = "ImageMembers4.jpg",
                            InstagramUrl = "InstagramURL for member 4",
                            IsDeleted = false,
                            LinkedinUrl = "LinkdInURL for member 4",
                            Name = "Member 4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(156),
                            Description = "Description for member 5",
                            FacebookUrl = "FacebookURL for member 5",
                            Image = "ImageMembers5.jpg",
                            InstagramUrl = "InstagramURL for member 5",
                            IsDeleted = false,
                            LinkedinUrl = "LinkdInURL for member 5",
                            Name = "Member 5"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(162),
                            Description = "Description for member 6",
                            FacebookUrl = "FacebookURL for member 6",
                            Image = "ImageMembers6.jpg",
                            InstagramUrl = "InstagramURL for member 6",
                            IsDeleted = false,
                            LinkedinUrl = "LinkdInURL for member 6",
                            Name = "Member 6"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(168),
                            Description = "Description for member 7",
                            FacebookUrl = "FacebookURL for member 7",
                            Image = "ImageMembers7.jpg",
                            InstagramUrl = "InstagramURL for member 7",
                            IsDeleted = false,
                            LinkedinUrl = "LinkdInURL for member 7",
                            Name = "Member 7"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(174),
                            Description = "Description for member 8",
                            FacebookUrl = "FacebookURL for member 8",
                            Image = "ImageMembers8.jpg",
                            InstagramUrl = "InstagramURL for member 8",
                            IsDeleted = false,
                            LinkedinUrl = "LinkdInURL for member 8",
                            Name = "Member 8"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(179),
                            Description = "Description for member 9",
                            FacebookUrl = "FacebookURL for member 9",
                            Image = "ImageMembers9.jpg",
                            InstagramUrl = "InstagramURL for member 9",
                            IsDeleted = false,
                            LinkedinUrl = "LinkdInURL for member 9",
                            Name = "Member 9"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(187),
                            Description = "Description for member 10",
                            FacebookUrl = "FacebookURL for member 10",
                            Image = "ImageMembers10.jpg",
                            InstagramUrl = "InstagramURL for member 10",
                            IsDeleted = false,
                            LinkedinUrl = "LinkdInURL for member 10",
                            Name = "Member 10"
                        });
                });

            modelBuilder.Entity("Project.Domain.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Content = "Content for New 1",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9889),
                            Image = "Image for New 1",
                            IsDeleted = false,
                            Name = "New 1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Content = "Content for New 2",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9895),
                            Image = "Image for New 2",
                            IsDeleted = false,
                            Name = "New 2"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Content = "Content for New 3",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9901),
                            Image = "Image for New 3",
                            IsDeleted = false,
                            Name = "New 3"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Content = "Content for New 4",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9906),
                            Image = "Image for New 4",
                            IsDeleted = false,
                            Name = "New 4"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Content = "Content for New 5",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9911),
                            Image = "Image for New 5",
                            IsDeleted = false,
                            Name = "New 5"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            Content = "Content for New 6",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9916),
                            Image = "Image for New 6",
                            IsDeleted = false,
                            Name = "New 6"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            Content = "Content for New 7",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9921),
                            Image = "Image for New 7",
                            IsDeleted = false,
                            Name = "New 7"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 8,
                            Content = "Content for New 8",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9925),
                            Image = "Image for New 8",
                            IsDeleted = false,
                            Name = "New 8"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 9,
                            Content = "Content for New 9",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9930),
                            Image = "Image for New 9",
                            IsDeleted = false,
                            Name = "New 9"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 10,
                            Content = "Content for New 10",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9936),
                            Image = "Image for New 10",
                            IsDeleted = false,
                            Name = "New 10"
                        });
                });

            modelBuilder.Entity("Project.Domain.Entities.Organizations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AboutUsText")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("VARCHAR(320)");

                    b.Property<string>("FacebookUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("InstagramUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedinUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<int>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("INTEGER");

                    b.Property<string>("WelcomeText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AboutUsText = "AboutUsText for Organization 1",
                            Address = "Address for Organization 1",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(204),
                            Email = "Email for Organization 1",
                            FacebookUrl = "FacebookUrl1",
                            Image = "ImageOrganizations1.jpg",
                            InstagramUrl = "InstagramUrl1",
                            IsDeleted = false,
                            LinkedinUrl = "InstragramUrl1",
                            Name = "Organization 1",
                            Phone = 382,
                            WelcomeText = "WelcomeText for Organization 1"
                        },
                        new
                        {
                            Id = 2,
                            AboutUsText = "AboutUsText for Organization 2",
                            Address = "Address for Organization 2",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(213),
                            Email = "Email for Organization 2",
                            FacebookUrl = "FacebookUrl2",
                            Image = "ImageOrganizations2.jpg",
                            InstagramUrl = "InstagramUrl2",
                            IsDeleted = false,
                            LinkedinUrl = "InstragramUrl2",
                            Name = "Organization 2",
                            Phone = 383,
                            WelcomeText = "WelcomeText for Organization 2"
                        },
                        new
                        {
                            Id = 3,
                            AboutUsText = "AboutUsText for Organization 3",
                            Address = "Address for Organization 3",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(248),
                            Email = "Email for Organization 3",
                            FacebookUrl = "FacebookUrl3",
                            Image = "ImageOrganizations3.jpg",
                            InstagramUrl = "InstagramUrl3",
                            IsDeleted = false,
                            LinkedinUrl = "InstragramUrl3",
                            Name = "Organization 3",
                            Phone = 384,
                            WelcomeText = "WelcomeText for Organization 3"
                        },
                        new
                        {
                            Id = 4,
                            AboutUsText = "AboutUsText for Organization 4",
                            Address = "Address for Organization 4",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(256),
                            Email = "Email for Organization 4",
                            FacebookUrl = "FacebookUrl4",
                            Image = "ImageOrganizations4.jpg",
                            InstagramUrl = "InstagramUrl4",
                            IsDeleted = false,
                            LinkedinUrl = "InstragramUrl4",
                            Name = "Organization 4",
                            Phone = 385,
                            WelcomeText = "WelcomeText for Organization 4"
                        },
                        new
                        {
                            Id = 5,
                            AboutUsText = "AboutUsText for Organization 5",
                            Address = "Address for Organization 5",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(262),
                            Email = "Email for Organization 5",
                            FacebookUrl = "FacebookUrl5",
                            Image = "ImageOrganizations5.jpg",
                            InstagramUrl = "InstagramUrl5",
                            IsDeleted = false,
                            LinkedinUrl = "InstragramUrl5",
                            Name = "Organization 5",
                            Phone = 386,
                            WelcomeText = "WelcomeText for Organization 5"
                        },
                        new
                        {
                            Id = 6,
                            AboutUsText = "AboutUsText for Organization 6",
                            Address = "Address for Organization 6",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(270),
                            Email = "Email for Organization 6",
                            FacebookUrl = "FacebookUrl6",
                            Image = "ImageOrganizations6.jpg",
                            InstagramUrl = "InstagramUrl6",
                            IsDeleted = false,
                            LinkedinUrl = "InstragramUrl6",
                            Name = "Organization 6",
                            Phone = 387,
                            WelcomeText = "WelcomeText for Organization 6"
                        },
                        new
                        {
                            Id = 7,
                            AboutUsText = "AboutUsText for Organization 7",
                            Address = "Address for Organization 7",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(276),
                            Email = "Email for Organization 7",
                            FacebookUrl = "FacebookUrl7",
                            Image = "ImageOrganizations7.jpg",
                            InstagramUrl = "InstagramUrl7",
                            IsDeleted = false,
                            LinkedinUrl = "InstragramUrl7",
                            Name = "Organization 7",
                            Phone = 388,
                            WelcomeText = "WelcomeText for Organization 7"
                        },
                        new
                        {
                            Id = 8,
                            AboutUsText = "AboutUsText for Organization 8",
                            Address = "Address for Organization 8",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(318),
                            Email = "Email for Organization 8",
                            FacebookUrl = "FacebookUrl8",
                            Image = "ImageOrganizations8.jpg",
                            InstagramUrl = "InstagramUrl8",
                            IsDeleted = false,
                            LinkedinUrl = "InstragramUrl8",
                            Name = "Organization 8",
                            Phone = 389,
                            WelcomeText = "WelcomeText for Organization 8"
                        },
                        new
                        {
                            Id = 9,
                            AboutUsText = "AboutUsText for Organization 9",
                            Address = "Address for Organization 9",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(324),
                            Email = "Email for Organization 9",
                            FacebookUrl = "FacebookUrl9",
                            Image = "ImageOrganizations9.jpg",
                            InstagramUrl = "InstagramUrl9",
                            IsDeleted = false,
                            LinkedinUrl = "InstragramUrl9",
                            Name = "Organization 9",
                            Phone = 390,
                            WelcomeText = "WelcomeText for Organization 9"
                        },
                        new
                        {
                            Id = 10,
                            AboutUsText = "AboutUsText for Organization 10",
                            Address = "Address for Organization 10",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(333),
                            Email = "Email for Organization 10",
                            FacebookUrl = "FacebookUrl10",
                            Image = "ImageOrganizations10.jpg",
                            InstagramUrl = "InstagramUrl10",
                            IsDeleted = false,
                            LinkedinUrl = "InstragramUrl10",
                            Name = "Organization 10",
                            Phone = 391,
                            WelcomeText = "WelcomeText for Organization 10"
                        });
                });

            modelBuilder.Entity("Project.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(8715),
                            Description = "Description User Admin",
                            IsDeleted = false,
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description User Standard",
                            IsDeleted = false,
                            Name = "Standard"
                        });
                });

            modelBuilder.Entity("Project.Domain.Entities.Slides", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("VARCHAR(4000)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Slides");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(441),
                            ImageUrl = "ImageUrl for Slide 1",
                            IsDeleted = false,
                            Order = 1,
                            OrganizationId = 1,
                            Text = "Text for Slide 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(447),
                            ImageUrl = "ImageUrl for Slide 2",
                            IsDeleted = false,
                            Order = 2,
                            OrganizationId = 2,
                            Text = "Text for Slide 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(453),
                            ImageUrl = "ImageUrl for Slide 3",
                            IsDeleted = false,
                            Order = 3,
                            OrganizationId = 3,
                            Text = "Text for Slide 3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(458),
                            ImageUrl = "ImageUrl for Slide 4",
                            IsDeleted = false,
                            Order = 4,
                            OrganizationId = 4,
                            Text = "Text for Slide 4"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(463),
                            ImageUrl = "ImageUrl for Slide 5",
                            IsDeleted = false,
                            Order = 5,
                            OrganizationId = 5,
                            Text = "Text for Slide 5"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(469),
                            ImageUrl = "ImageUrl for Slide 6",
                            IsDeleted = false,
                            Order = 6,
                            OrganizationId = 6,
                            Text = "Text for Slide 6"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(474),
                            ImageUrl = "ImageUrl for Slide 7",
                            IsDeleted = false,
                            Order = 7,
                            OrganizationId = 7,
                            Text = "Text for Slide 7"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(479),
                            ImageUrl = "ImageUrl for Slide 8",
                            IsDeleted = false,
                            Order = 8,
                            OrganizationId = 8,
                            Text = "Text for Slide 8"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(512),
                            ImageUrl = "ImageUrl for Slide 9",
                            IsDeleted = false,
                            Order = 9,
                            OrganizationId = 9,
                            Text = "Text for Slide 9"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(519),
                            ImageUrl = "ImageUrl for Slide 10",
                            IsDeleted = false,
                            Order = 10,
                            OrganizationId = 10,
                            Text = "Text for Slide 10"
                        });
                });

            modelBuilder.Entity("Project.Domain.Entities.Testimonials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("VARCHAR(8000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("Testimonials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Contetnt for Testimonial 1",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(377),
                            Image = "Image for testimonial 1",
                            IsDeleted = false,
                            Name = "Organization 1"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Contetnt for Testimonial 2",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(386),
                            Image = "Image for testimonial 2",
                            IsDeleted = false,
                            Name = "Organization 2"
                        },
                        new
                        {
                            Id = 3,
                            Content = "Contetnt for Testimonial 3",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(392),
                            Image = "Image for testimonial 3",
                            IsDeleted = false,
                            Name = "Organization 3"
                        },
                        new
                        {
                            Id = 4,
                            Content = "Contetnt for Testimonial 4",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(397),
                            Image = "Image for testimonial 4",
                            IsDeleted = false,
                            Name = "Organization 4"
                        },
                        new
                        {
                            Id = 5,
                            Content = "Contetnt for Testimonial 5",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(402),
                            Image = "Image for testimonial 5",
                            IsDeleted = false,
                            Name = "Organization 5"
                        },
                        new
                        {
                            Id = 6,
                            Content = "Contetnt for Testimonial 6",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(408),
                            Image = "Image for testimonial 6",
                            IsDeleted = false,
                            Name = "Organization 6"
                        },
                        new
                        {
                            Id = 7,
                            Content = "Contetnt for Testimonial 7",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(413),
                            Image = "Image for testimonial 7",
                            IsDeleted = false,
                            Name = "Organization 7"
                        },
                        new
                        {
                            Id = 8,
                            Content = "Contetnt for Testimonial 8",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(418),
                            Image = "Image for testimonial 8",
                            IsDeleted = false,
                            Name = "Organization 8"
                        },
                        new
                        {
                            Id = 9,
                            Content = "Contetnt for Testimonial 9",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(423),
                            Image = "Image for testimonial 9",
                            IsDeleted = false,
                            Name = "Organization 9"
                        },
                        new
                        {
                            Id = 10,
                            Content = "Contetnt for Testimonial 10",
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 904, DateTimeKind.Local).AddTicks(430),
                            Image = "Image for testimonial 10",
                            IsDeleted = false,
                            Name = "Organization 10"
                        });
                });

            modelBuilder.Entity("Project.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("VARCHAR(320)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR(64)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9070),
                            Email = "Email for user 1",
                            FirstName = "User1",
                            IsDeleted = false,
                            LastName = "LastName for user 1",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92",
                            Photo = "Photo for user 1",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9156),
                            Email = "Email for user 2",
                            FirstName = "User2",
                            IsDeleted = false,
                            LastName = "LastName for user 2",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92",
                            Photo = "Photo for user 2",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9241),
                            Email = "Email for user 3",
                            FirstName = "User3",
                            IsDeleted = false,
                            LastName = "LastName for user 3",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92",
                            Photo = "Photo for user 3",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9290),
                            Email = "Email for user 4",
                            FirstName = "User4",
                            IsDeleted = false,
                            LastName = "LastName for user 4",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92",
                            Photo = "Photo for user 4",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9343),
                            Email = "Email for user 5",
                            FirstName = "User5",
                            IsDeleted = false,
                            LastName = "LastName for user 5",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92",
                            Photo = "Photo for user 5",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9391),
                            Email = "Email for user 6",
                            FirstName = "User6",
                            IsDeleted = false,
                            LastName = "LastName for user 6",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92",
                            Photo = "Photo for user 6",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9466),
                            Email = "Email for user 7",
                            FirstName = "User7",
                            IsDeleted = false,
                            LastName = "LastName for user 7",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92",
                            Photo = "Photo for user 7",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9513),
                            Email = "Email for user 8",
                            FirstName = "User8",
                            IsDeleted = false,
                            LastName = "LastName for user 8",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92",
                            Photo = "Photo for user 8",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9557),
                            Email = "Email for user 9",
                            FirstName = "User9",
                            IsDeleted = false,
                            LastName = "LastName for user 9",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92",
                            Photo = "Photo for user 9",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2022, 4, 16, 3, 15, 36, 903, DateTimeKind.Local).AddTicks(9638),
                            Email = "Email for user 10",
                            FirstName = "User10",
                            IsDeleted = false,
                            LastName = "LastName for user 10",
                            Password = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92",
                            Photo = "Photo for user 10",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Project.Domain.Entities.Comments", b =>
                {
                    b.HasOne("Project.Domain.Entities.News", "News")
                        .WithMany()
                        .HasForeignKey("NewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Project.Domain.Entities.News", b =>
                {
                    b.HasOne("Project.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Project.Domain.Entities.Slides", b =>
                {
                    b.HasOne("Project.Domain.Entities.Organizations", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Project.Domain.Entities.User", b =>
                {
                    b.HasOne("Project.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
